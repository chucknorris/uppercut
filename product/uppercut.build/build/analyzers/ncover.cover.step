<?xml version="1.0" encoding="utf-8" ?>
<project name="NCover" default="go">
  <!-- Project UppercuT - http://projectuppercut.org -->
  <!-- DO NOT EDIT THIS FILE - NCover uses MbUnit to run tests - find out more at http://uppercut.pbwiki.com -->
  <property name="build.config.settings" value="__NONE__" overwrite="false" />
  <include buildfile="${build.config.settings}" if="${file::exists(build.config.settings)}" />
  <property name="path.separator" value="${string::trim(path::combine(' ', ' '))}" />
  <property name="dirs.current.file" value="${directory::get-parent-directory(project::get-buildfile-path())}" />
  <include buildfile="${dirs.current.file}${path.separator}..${path.separator}default.build.settings" />
  <property name="build.step.name" value="${project::get-name()}" />
  <property name="build.step.path" value="${project::get-buildfile-path()}" />
  <!-- build step customizations below this -->

  <property name="file.xml.code_coverage_results" value="${project.name}.CodeCoverageSummary-results.xml" />
  <property name="file.html.code_coverage_results" value="${project.name}.CodeCoverageSummary-results.html" />
  <property name="tests.excluded_categories.comma_separated" value="Database,Integration,Slow,NotWorking" overwrite="false" />
  <property name="test.args" value="" />
  <property name="test.args" value="/rt:Text /rnf:mbUnit /rf:&quot;${dirs.codecoverage_results}&quot; /ec:${tests.excluded_categories.comma_separated}" if="${test.framework=='mbunit2'}" />
  <property name="test.args" value="/xml:&quot;${dirs.codecoverage_results}${path.separator}nunit-results.xml&quot; /nologo /framework=${microsoft.framework} /exclude:${tests.excluded_categories.comma_separated}" if="${test.framework=='nunit'}" />
  <!--property name="test.args" value="/xml:&quot;${dirs.codecoverage_results}\nunit-results.xml&quot; /nologo /framework=${microsoft.framework} /exclude:${tests.excluded_categories.comma_separated}" if="${test.framework=='nunit'}" /-->

  <property name="fail.build.on.error" value="false" />

  <target name="go" depends="run_tasks" />

  <!-- run_normal_tasks is called from run_tasks unless replace extension exists-->
  <target name="run_normal_tasks"
          depends="get_test_dlls, ncover, ncover_explorer"
          description="Using NCover to Analyze project for test quality indicators."
          if="${run.codecoverage and cover.framework == 'ncover' and file::exists(app.codecoverage)}" />

  <target name="prepare">
    <echo level="Warning" message="Removing and adding ${dirs.codecoverage_results}."/>
    <delete dir="${dirs.codecoverage_results}" failonerror="false" />
    <mkdir dir="${dirs.codecoverage_results}" />
  </target>

  <target name="get_test_dlls">
    <echo level="Warning" message="Getting test dlls based on name in directory ${path::get-full-path(dirs.build.code)}." />
    <property name="dll.names" value="" />
    <foreach item="File" property="dll.filename">
      <in>
        <items>
          <exclude name="${dirs.build.code}${path.separator}lib${path.separator}**" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}*Database*dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}*.Integration*dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}TestFu.dll" />
          <include name="${dirs.build.code}${path.separator}**${path.separator}*Test*dll" />
          <include name="${dirs.build.code}${path.separator}**${path.separator}*Spec*dll" />
        </items>
      </in>
      <do>
        <property name="dll.names" value="${dll.names + ' ' + string::replace(string::replace(dll.filename,path::get-full-path(dirs.build.code) + '\',''),'\',path.separator) + ''}" />
      </do>
    </foreach>

    <property name="dlls.test" value="${dll.names}" />
    <echo level="Warning" message="Running NCover against these test dlls - ${dlls.test}." />

    <property name="args.test_runner" value="${dlls.test} ${test.args}" />
  </target>

  <target name="ncover" >
    <echo level="Warning" message="Attempting to run NCover. Creating file at ${file.codecoverage_results} and logging at '${dirs.codecoverage_results}${path.separator}${file.codecoverage_log}'." />
    <ncover program="${app.codecoverage}"
        commandLineExe="${app.test.console}"
        commandLineArgs="${args.test_runner}"
        workingDirectory="${dirs.build.code}"
        coverageFile="${file.codecoverage_results}"
        logLevel="Normal"
        logFile="${dirs.codecoverage_results}${path.separator}${file.codecoverage_log}"
        excludeAttributes="CoverageExcludeAttribute"
        failonerror="false"
        verbose="true">
      <assemblies basedir="${dirs.build.code}">
        <exclude name="${dirs.build.code}${path.separator}lib${path.separator}**" />
        <exclude name="${dirs.build.code}${path.separator}**${path.separator}TestFu.dll" />
        <exclude name="${dirs.build.code}${path.separator}**${path.separator}*Test*dll" />
        <exclude name="${dirs.build.code}${path.separator}**${path.separator}*Spec*dll" />
        <include name="${dirs.build.code}${path.separator}**${path.separator}${project.name}*.dll" />
      </assemblies>
    </ncover>
  </target>

  <target name="ncover_explorer" depends="ncover" if="${file::exists(app.codecoverage.explorer)}" >
    <echo level="Warning" message="Attempting to run NCoverExplorer. Creating HTML results file at ${file.html.code_coverage_results} and XML results file at ${file.xml.code_coverage_results}." />
    <ncoverexplorer
      program="${app.codecoverage.explorer}"
      projectName="${project.name}"
      reportType="4"
      outputDir="${dirs.codecoverage_results}"
      xmlReportName="${file.xml.code_coverage_results}"
      htmlReportName="${file.html.code_coverage_results}"
      showExcluded="True"
      satisfactoryCoverage="${codecoverage.satisfactory_coverage}"
      failMinimum="false"
      failonerror="false"
      >
      <fileset>
        <include name="${file.codecoverage_results}" />
      </fileset>
      <exclusions>
        <exclusion enabled="true" isRegex="false" pattern="*Test*" type="Assembly" />
        <exclusion enabled="true" isRegex="false" pattern="*Spec*" type="Assembly" />
        <exclusion enabled="true" isRegex="false" pattern="*Test*" type="Namespace" />
        <exclusion enabled="true" isRegex="false" pattern="*.My*" type="Namespace" />
        <exclusion enabled="true" isRegex="false" pattern="*.bdd*" type="Namespace" />
        <exclusion enabled="true" isRegex="false" pattern="when*" type="Class" />
        <exclusion enabled="true" isRegex="false" pattern="concern*" type="Class" />
      </exclusions>
    </ncoverexplorer>
  </target>

  <target name="open_results">
    <echo level="Warning" message="Opening results - ${path::get-full-path(dirs.codecoverage_results) + path.separator + file.html.code_coverage_results}" />
    <results display="${path::get-full-path(dirs.codecoverage_results) + path.separator + file.html.code_coverage_results}" />
  </target>
</project>
