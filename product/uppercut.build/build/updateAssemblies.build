<?xml version="1.0" encoding="utf-8" ?>
<project name="AssemblyDropper" default="go">
  <!-- Project UppercuT - http://projectuppercut.org -->
  <!-- DO NOT EDIT THIS FILE - This moves output files from your project to a folder to be consumed by other applications through something like externals - find out more at http://uppercut.pbwiki.com -->
  <property name="build.config.settings" value="__NONE__" overwrite="false" />
  <include buildfile="${build.config.settings}" if="${file::exists(build.config.settings)}" />
  <property name="path.separator" value="${string::trim(path::combine(' ', ' '))}" />
  <property name="file.current.no_extension" value="updateAssemblies" />
  <property name="dirs.current" value="${directory::get-parent-directory(project::get-buildfile-path())}" />
  <property name="path.to.toplevel" value=".." />
  <property name="folder.build_scripts" value="build" overwrite="false" />
  <property name="folder.build_scripts_custom" value="build.custom" overwrite="false" />
  <property name="dirs.build_scripts_custom" value="${dirs.current}${path.separator}..${path.separator}${folder.build_scripts_custom}" />
  <property name="folder.code_drop" value="code_drop" overwrite="false" />
  <property name="dirs.drop" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.code_drop}" overwrite="false" />
  <property name="folder.app.drop" value="${project.name}" overwrite="false" />
  <property name="project.name" value="__SOLUTION_NAME_WITHOUT_SLN_EXTENSION__" overwrite="false" />
  <property name="file.uppercut.assembly" value="uppercut.tasks.dll" />
  <property name="path.uppercut.assembly" value="${dirs.current}${path.separator}${file.uppercut.assembly}" />
  <property name="dirs.assemblies" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}assemblies" overwrite="false" />
  <property name="allow.powershell.unrestricted" value="false" overwrite="false" />
  <property name="is.replaced" value="false" />
  <property name="fail.build.on.error" value="true" />

  <target name="go" depends="load_uppercut_assemblies, allow_powershell_unrestricted, run_tasks" />

  <target name="run_tasks">
    <echo level="Warning" message="" />
    <echo level="Warning" message="====================" />
    <echo level="Warning" message="${project::get-name()}" />
    <echo level="Warning" message="====================" />
    <call target="prepare" if="${target::exists('prepare')}" />
    <customExtension extends="${project::get-buildfile-path()}" type="pre" failonerror="${fail.build.on.error}" />
    <customExtension extends="${project::get-buildfile-path()}" type="replace" failonerror="${fail.build.on.error}" />
    <call target="run_normal_tasks" if="${not is.replaced}" />
    <customExtension extends="${project::get-buildfile-path()}" type="post" failonerror="${fail.build.on.error}" />
  </target>

  <target name="run_normal_tasks"
          depends="error_check, update_assemblies"
          description="Moving assemblies to make available for Externals." />

  <target name="error_check">
    <fail message="You must provide arguments to the command line like this updateAssemblies.build -D:project.name='SOLUTION_NAME_WITHOUT_EXTENSION' or pass the build configuration settings file updateAssemblies.build -D:build.config.settings='Settings${path.separator}Uppercut.config"
      if="${project.name=='__SOLUTION_NAME_WITHOUT_SLN_EXTENSION__'}" />
  </target>

  <target name="update_assemblies">
    <echo level="Warning" message="Moving files to ${dirs.assemblies}." />
    <copy todir="${dirs.assemblies}">
      <fileset basedir="${dirs.drop}${path.separator}${folder.app.drop}">
        <include name="**/*.*" />
      </fileset>
    </copy>
  </target>

  <target name="load_uppercut_assemblies">
    <loadtasks assembly="${path.uppercut.assembly}" if="${file::exists(path.uppercut.assembly)}" />
  </target>
  
  <target name="allow_powershell_unrestricted">
    <!-- powershell 1.0 -->
    <exec program="powershell.exe" if="${allow.powershell.unrestricted}" failonerror="false">
      <arg value="set-executionpolicy unrestricted" />
    </exec>
    <!-- powershell 2.0 -->
    <exec program="powershell.exe" if="${allow.powershell.unrestricted}" failonerror="false">
      <arg value="set-executionpolicy unrestricted -force -scope CurrentUser" />
    </exec>
  </target>
    
</project>