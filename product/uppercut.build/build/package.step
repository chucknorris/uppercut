<?xml version="1.0" encoding="utf-8" ?>
<project name="PackageBuilder" default="go">
  <!-- Project UppercuT - http://projectuppercut.org -->
  <!-- DO NOT EDIT THIS FILE - Add custom tasks in BuildTasks.Custom folder with file by the same name - find out more at http://uppercut.pbwiki.com -->
  <property name="build.config.settings" value="__NONE__" overwrite="false" />
  <include buildfile="${build.config.settings}" if="${file::exists(build.config.settings)}" />
  <property name="path.separator" value="${string::trim(path::combine(' ', ' '))}" />
  <property name="file.current.no_extension" value="package" />
  <property name="dirs.current" value="${directory::get-current-directory()}" />
  <property name="dirs.current.file" value="${directory::get-parent-directory(project::get-buildfile-path())}" />  
  <property name="folder.build_scripts" value="build" overwrite="false" />
  <property name="folder.build_scripts_custom" value="build.custom" overwrite="false" />
  <property name="dirs.build_scripts_custom" value="${dirs.current}${path.separator}${folder.build_scripts_custom}" />
  <property name="folder.code_build" value="build_output" overwrite="false" />
  <property name="dirs.build" value="${dirs.current}${path.separator}${folder.code_build}" />
  <property name="folder.code_drop" value="code_drop" overwrite="false" />
  <property name="dirs.drop" value="${dirs.current}${path.separator}${folder.code_drop}" overwrite="false" />
  <property name="folder.build_artifacts" value="build_artifacts" overwrite="false" />
  <property name="folder.app.drop" value="${project.name}" overwrite="false" />
  <property name="folder.database" value="__DATABASE_FOLDER_NAME__" overwrite="false" />
  <property name="folder.reports" value="${project.name}.Reports" overwrite="false" />
  <property name="folder.file_server" value="file.server" overwrite="false" />
  <property name="folder.environment_files" value="environment.files" overwrite="false" />
  <property name="folder.deployment" value="deployment" overwrite="false" />
  <property name="folder.settings" value="settings" overwrite="false" />
  <property name="folder.documentation" value="docs" overwrite="false" />
  <property name="file.build_info" value="${dirs.build}${path.separator}_BuildInfo.xml" />
  <property name="file.build_log" value="${dirs.build}${path.separator}build.log" />
  <property name="is.replaced" value="false" />
  <property name="fail.build.on.error" value="true" />

  <target name="go" depends="run_tasks" />

  <target name="run_tasks">
    <echo level="Warning" message="" />
    <echo level="Warning" message="====================" />
    <echo level="Warning" message="${project::get-name()}" />
    <echo level="Warning" message="====================" />
    <customExtension extends="${project::get-buildfile-path()}" type="pre" failonerror="${fail.build.on.error}" />
    <customExtension extends="${project::get-buildfile-path()}" type="replace" failonerror="${fail.build.on.error}" />
    <call target="run_normal_tasks" if="${not is.replaced}" />
    <customExtension extends="${project::get-buildfile-path()}" type="post" failonerror="${fail.build.on.error}" />
  </target>

  <target name="run_normal_tasks"
          depends="prepare, build_artifacts, app, app_published, web, db, reports, file_server, environment_files, deployment_scripts, settings_files, set_file_attributes_to_normal, build_deployment_files, build_info_file, documentation"
          description="Packaging project." />

  <target name="prepare">
    <echo level="Warning" message="Removing and adding ${dirs.drop}."/>
    <delete dir="${dirs.drop}" failonerror="false" />
    <mkdir dir="${dirs.drop}" />
  </target>

  <target name="build_artifacts">
    <echo level="Warning" message="Packaging build artifacts (such as test results) to ${dirs.drop}${path.separator}${folder.build_artifacts}."/>
    <copy todir="${dirs.drop}${path.separator}${folder.build_artifacts}">
      <fileset basedir="${dirs.build}${path.separator}${folder.build_artifacts}">
        <include name="**/*.*" />
      </fileset>
    </copy>
  </target>

  <target name="app">
    <echo level="Warning" message="Packaging application items to ${dirs.drop}${path.separator}${folder.app.drop}."/>
    <copy todir="${dirs.drop}${path.separator}${folder.app.drop}">
      <fileset basedir="${dirs.build}${path.separator}${folder.app.drop}">
        <exclude name="${folder.database}${path.separator}**" />
        <exclude name="${folder.reports}${path.separator}**" />
        <exclude name="${folder.deployment}${path.separator}**" />
        <exclude name="${folder.documentation}${path.separator}**" />
        <exclude name="${folder.environment_files}${path.separator}**" />
        <exclude name="${folder.file_server}${path.separator}**" />
        <exclude name="${folder.build_artifacts}${path.separator}**" />
        <exclude name="*_Published*${path.separator}**" />
        <exclude name="*Test*${path.separator}**" />
        <exclude name="*.Specs*${path.separator}**" />
        <exclude name="*bdddoc.*" />
        <exclude name="*developwithpassion.bdd.*" />
        <exclude name="*nunit.*" />
        <exclude name="*xunit.*" />
        <exclude name="*MbUnit*.*" />
        <exclude name="*Refly.*" />
        <exclude name="*QuickGraph*.*" />
        <exclude name="*Rhino.Mocks.*" />
        <exclude name="*Moq.*" />
        <exclude name="**${path.separator}*.template" />
        <include name="**/*.*" />
      </fileset>
    </copy>
  </target>

  <target name="app_published">
    <echo level="Warning" message="Packaging published applications to ${dirs.drop}${path.separator}_PublishedApplications."/>
    <copy todir="${dirs.drop}${path.separator}_PublishedApplications">
      <fileset basedir="${dirs.build}${path.separator}${folder.app.drop}${path.separator}_PublishedApplications">
        <exclude name="**${path.separator}*.template" />
        <include name="**/*.*" />
      </fileset>
    </copy>
  </target>
  
  <target name="web">
    <echo level="Warning" message="Packaging website to ${dirs.drop}${path.separator}_PublishedWebSites."/>
    <copy todir="${dirs.drop}${path.separator}_PublishedWebSites">
      <fileset basedir="${dirs.build}${path.separator}${folder.app.drop}${path.separator}_PublishedWebSites">
        <exclude name="**${path.separator}*.template" />
        <include name="**/*.*" />
      </fileset>
    </copy>
  </target>

  <target name="db">
    <echo level="Warning" message="Packaging database files to ${dirs.drop}${path.separator}${folder.database}."/>
    <copy todir="${dirs.drop}${path.separator}${folder.database}">
      <fileset basedir="${dirs.build}${path.separator}${folder.database}">
        <exclude name="**${path.separator}*.template" />
        <include name="**/*.*" />
      </fileset>
    </copy>
  </target>

  <target name="reports">
    <echo level="Warning" message="Packaging reports to ${dirs.drop}${path.separator}${folder.reports}."/>
    <copy todir="${dirs.drop}${path.separator}${folder.reports}">
      <fileset basedir="${dirs.current}${path.separator}${folder.reports}">
        <exclude name="**${path.separator}*.template" />
        <include name="**/*.*" />
      </fileset>
    </copy>
  </target>

  <target name="file_server">
    <echo level="Warning" message="Packaging file server items to ${dirs.drop}${path.separator}${folder.file_server}."/>
    <copy todir="${dirs.drop}${path.separator}${folder.file_server}">
      <fileset basedir="${dirs.current}${path.separator}${folder.file_server}">
        <exclude name="**${path.separator}*.template" />
        <include name="**/*.*" />
      </fileset>
    </copy>
    
    <echo level="Warning" message="Packaging output fileserver items to ${dirs.drop}${path.separator}FileServer."/>
     <copy todir="${dirs.drop}${path.separator}FileServer">
      <fileset basedir="${dirs.build}${path.separator}${folder.app.drop}${path.separator}FileServer">
        <include name="**/**" />
      </fileset>
    </copy>
  </target>

  <target name="environment_files">
    <echo level="Warning" message="Packaging environment files to ${dirs.drop}${path.separator}${folder.environment_files}."/>
    <copy todir="${dirs.drop}${path.separator}${folder.environment_files}">
      <fileset basedir="${dirs.build}${path.separator}${folder.environment_files}">
        <include name="**/*.*" />
      </fileset>
    </copy>
  </target>

  <target name="deployment_scripts">
    <echo level="Warning" message="Packaging deployment scripts to ${dirs.drop}${path.separator}${folder.deployment}."/>
    <copy todir="${dirs.drop}${path.separator}${folder.deployment}">
      <fileset basedir="${dirs.current}${path.separator}${folder.deployment}">
        <exclude name="**${path.separator}*.template" />
        <exclude name="templates${path.separator}**" />
        <include name="**/*.*" />
      </fileset>
    </copy>
  </target>

  <target name="settings_files">
    <echo level="Warning" message="Packaging settings files to ${dirs.drop}${path.separator}${folder.settings}."/>
    <copy todir="${dirs.drop}${path.separator}${folder.settings}">
      <fileset basedir="${dirs.current}${path.separator}${folder.settings}">
        <include name="**/*.settings" />
      </fileset>
    </copy>
  </target>
  
  <target name="set_file_attributes_to_normal">
    <echo level="Warning" message="Removing read only attributes that some source control things put on files in '${dirs.drop}'." />
    <attrib normal="true">
      <fileset basedir="${dirs.drop}">
        <include name="**/*" />
      </fileset>
    </attrib>
  </target>  

  <target name="build_deployment_files">
    <echo level="Warning" message="Building Deployment Files."/>
    <nant buildfile="deploymentBuilder.step" inheritall="true" failonerror="false" />
  </target>

  <target name="build_info_file">
    <echo level="Warning" message="Copying ${file.build_info} to ${folder.build_artifacts}, ${folder.app.drop}, and ${folder.deployment} in the ${dirs.drop} folder."/>

    <copy
     file="${file.build_info}"
     todir="${dirs.drop}${path.separator}${folder.build_artifacts}"
      />
      
    <copy
     file="${file.build_info}"
     todir="${dirs.drop}${path.separator}${folder.app.drop}"
      />

    <copy
      file="${file.build_info}"
      todir="${dirs.drop}${path.separator}${folder.deployment}"
      />
  </target>

  <target name="documentation">
    <echo level="Warning" message="Packaging documentation files to ${dirs.drop}${path.separator}${folder.documentation}."/>
    <copy todir="${dirs.drop}${path.separator}${folder.documentation}">
      <fileset basedir="${dirs.build}${path.separator}${folder.documentation}">
        <include name="**/*.*" />
      </fileset>
    </copy>
  </target>

</project>