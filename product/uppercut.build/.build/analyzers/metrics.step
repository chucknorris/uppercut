<?xml version="1.0" encoding="utf-8" ?>
<project name="Visual Studio Code Metrics" default="go">
  <!-- Project UppercuT - http://projectuppercut.org -->
  <property name="build.config.settings" value="__NONE__" overwrite="false" />
  <include buildfile="${build.config.settings}" if="${file::exists(build.config.settings)}" />
  <property name="path.separator" value="${string::trim(path::combine(' ', ' '))}" />
  <property name="dirs.current.file" value="${directory::get-parent-directory(project::get-buildfile-path())}" />
  <include buildfile="${dirs.current.file}${path.separator}..${path.separator}default.build.settings" />
  <property name="build.step.name" value="${project::get-name()}" />
  <property name="build.step.path" value="${project::get-buildfile-path()}" />
  <!-- build step customizations below this -->

  <property name="dirs.metrics_results" value="${dirs.build_artifacts}${path.separator}metrics" />
  <property name="file.metrics_results" value="${project.name}.Metrics.xml" />
  <property name="file.metrics_log" value="${project.name}.Metrics.log" />
  <property name="args.metrics" value="/searchgac /o:&quot;${dirs.metrics_results}${path.separator}${file.metrics_results}&quot;" />

  <property name="fail.build.on.error" value="false" />

  <target name="go" depends="load_uppercut_assemblies, run_tasks" />

  <target name="prepare">
    <echo message="Removing and adding ${dirs.metrics_results}."/>
    <delete dir="${dirs.metrics_results}" failonerror="false" />
    <mkdir dir="${dirs.metrics_results}" />
  </target>

  <target name="run_normal_tasks"
          depends="get_regular_dlls, metrics"
          description="Using Visual Studio Code Metrics to report on the complexity and maintainability of your project(s)."
           if="${run.metrics and file::exists(app.metrics)}" />

  <target name="get_regular_dlls">
    <echo level="warning" message="Getting output dlls based on name in directory ${path::get-full-path(dirs.build.code)}." />
    <property name="dll.names" value="" />
    <property name="dll.args" value="" />
    <foreach item="File" property="dll.filename">
      <in>
        <items>
          <exclude name="${dirs.build.code}${path.separator}lib${path.separator}**" />
          <exclude name="${dirs.build.code}${path.separator}_PublishedApplications${path.separator}**" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}NUnit*.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}MbUnit*.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}TestFu.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}QuickGraph*.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}Refly*.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}Rhino.Mocks*.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}*bdd*.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}*Test*dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}*Spec*dll" />
          <include name="${dirs.build.code}${path.separator}${project.name}*dll" />
          <include name="${dirs.build.code}${path.separator}*exe" />
        </items>
      </in>
      <do>
        <property name="dll.names" value="${dll.names + ' ' + string::replace(string::replace(dll.filename,path::get-full-path(dirs.build.code) + '\',''),'\',path.separator) + ''}" />
        <property name="dll.args" value="${dll.args + ' /f:&quot;' + string::replace(string::replace(dll.filename,path::get-full-path(dirs.build.code) + '\',''),'\',path.separator) + '&quot;'}" />
      </do>
    </foreach>

    <echo level="Warning" message="Running Visual Studio Code Metrics against these files - ${dll.names}." unless="${dll.names == ''}" />
    <echo level="Warning" message="No dlls to run against." if="${dll.names == ''}" />

      <property name="args.metrics" value=" ${dll.args} ${args.metrics}" />
  </target>

  <target name="metrics" if="${dll.args != ''}" >
    <echo level="Warning" message="Attempting to run Visual Studio Code Metrics. Creating file at ${file.metrics_results}." />

    <exec program="${app.metrics}"
      workingdir="${dirs.build.code}"
      failonerror="${fail.build.on.error}"
      if="${platform::is-windows()}"
      >
      <arg line="${args.metrics}" />
    </exec>
    <exec program="mono"
      workingdir="${dirs.build.code}"
      failonerror="${fail.build.on.error}"
      if="${platform::is-unix()}"
      >
      <arg line='"${app.metrics}"' />
      <arg line="${args.metrics}" />
    </exec>s
  </target>

  <target name="open_results">
    <echo message="Opening results - ${path::get-full-path(dirs.metrics_results) + path.separator + file.metrics_results}."/>
    <results display="${path::get-full-path(dirs.metrics_results) + path.separator + file.metrics_results}" />
  </target>
</project>
