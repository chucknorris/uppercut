<?xml version="1.0" encoding="utf-8" ?>
<project name="Mono Migration Analyzer" default="go">
  <!-- Project UppercuT - http://projectuppercut.org -->
  <!-- DO NOT EDIT THIS FILE - Mono Migration Analyzer - find out more at http://uppercut.pbwiki.com -->
  <property name="build.config.settings" value="__NONE__" overwrite="false" />
  <include buildfile="${build.config.settings}" if="${file::exists(build.config.settings)}" />
  <property name="path.separator" value="${string::trim(path::combine(' ', ' '))}" />
  <property name="dirs.current.file" value="${directory::get-parent-directory(project::get-buildfile-path())}" />
  <include buildfile="${dirs.current.file}${path.separator}..${path.separator}default.build.settings" />
  <property name="build.step.name" value="${project::get-name()}" />
  <property name="build.step.path" value="${project::get-buildfile-path()}" />
  <!-- build step customizations below this -->

  <property name="dirs.moma_results" value="${path::get-full-path(dirs.build_artifacts)}${path.separator}monoMigrationAnalyzer" />
  <property name="file.moma_results" value="${project.name}.MoMAReport.html" />
  <property name="file.moma.submit_results" value="${project.name}.MoMAReport.xml" />
  <property name="file.moma_log" value="${project.name}.moma.log" />
  <property name="args.moma" value="--nogui --out &quot;${dirs.moma_results}${path.separator}${file.moma_results}&quot;" />

  <property name="fail.build.on.error" value="false" />

  <target name="go" depends="run_tasks" />

  <target name="prepare">
    <echo level="Warning" message="Removing and adding ${dirs.moma_results}."/>
    <delete dir="${dirs.moma_results}" failonerror="false" />
    <mkdir dir="${dirs.moma_results}" />
  </target>

  <!-- run_normal_tasks is called from run_tasks unless replace extension exists-->
  <target name="run_normal_tasks"
          depends="get_regular_dlls, moma"
          description="Using Mono Migration Analyzer to Analyze project for ability to run cross platform."
           if="${run.moma and file::exists(app.moma)}" />

  <target name="get_regular_dlls">
    <echo level="Warning" message="Getting output dlls based on name in directory ${path::get-full-path(dirs.build.code)}." />
    <property name="dll.names" value="" />
    <foreach item="File" property="dll.filename">
      <in>
        <items>
          <exclude name="${dirs.build.code}${path.separator}lib${path.separator}**" />
          <exclude name="${dirs.build.code}${path.separator}_PublishedApplications${path.separator}**" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}NUnit*.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}MbUnit*.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}TestFu.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}QuickGraph*.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}Refly*.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}Rhino.Mocks*.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}*bdd*.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}*Test*dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}*Spec*dll" />
          <include name="${dirs.build.code}${path.separator}**${path.separator}*.dll" />
          <include name="${dirs.build.code}${path.separator}**${path.separator}*.exe" />
        </items>
      </in>
      <do>
        <property name="dll.names" value="${dll.names + ' ' + string::replace(string::replace(dll.filename,path::get-full-path(dirs.build.code) + '\',''),'\',path.separator) + ''}" />
      </do>
    </foreach>

    <property name="dlls.regular" value="${dll.names}" />
    <echo level="Warning" message="Running Mono Migration Analyzer against these files - ${dlls.regular}." />

    <property name="args.moma" value="${args.moma} ${dlls.regular}" />
  </target>

  <target name="moma" if="${file::exists(app.moma)}" >
    <echo level="Warning" message="Attempting to run Mono Migration Analyzer. Creating file at ${file.moma_results} and logging at ${file.moma_log}." />

    <exec program="${app.moma}"
          workingdir="${dirs.build.code}"
          >
      <arg line="${args.moma}" />
    </exec>

  </target>

  <target name="open_results">
    <echo level="Warning" message="Opening results - ${path::get-full-path(dirs.moma_results) + path.separator + file.moma_results}."/>
    <results display="${path::get-full-path(dirs.moma_results) + path.separator + file.moma_results}" />
  </target>

</project>
