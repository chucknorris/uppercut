<?xml version="1.0" encoding="utf-8" ?>
<project name="TestRunner" default="go">
  <!-- Project UppercuT - http://projectuppercut.org -->
  <!-- DO NOT EDIT THIS FILE - Add custom tasks in BuildTasks.Custom folder with file by the same name - find out more at http://uppercut.pbwiki.com -->
  <property name="build.config.settings" value="__NONE__" overwrite="false" />
  <include buildfile="${build.config.settings}" if="${file::exists(build.config.settings)}" />
  <property name="path.separator" value="${string::trim(path::combine(' ', ' '))}" />
  <property name="dirs.current.file" value="${directory::get-parent-directory(project::get-buildfile-path())}" />
  <include buildfile="${dirs.current.file}${path.separator}..${path.separator}default.build.settings" />
  <property name="build.step.name" value="${project::get-name()}" />
  <property name="build.step.path" value="${project::get-buildfile-path()}" />
  <!-- build step customizations below this -->

  <target name="go" depends="load_uppercut_assemblies, run_tasks" />

  <!-- run_normal_tasks is called from run_tasks unless replace extension exists -->
  <target name="run_normal_tasks"
          depends="run_tests"
          description="Testing project for quality."
          if="${run.tests}" />

  <target name="run_tests">
    <nant buildfile="${dirs.current.file}${path.separator}mbunit2.test.step" inheritall="true" if="${test.framework == 'mbunit2'}" />
    <nant buildfile="${dirs.current.file}${path.separator}gallio.test.step" inheritall="true" if="${test.framework == 'gallio'}" />
    <nant buildfile="${dirs.current.file}${path.separator}nunit.test.step" inheritall="true" if="${test.framework == 'nunit'}" />
    <nant buildfile="${dirs.current.file}${path.separator}xunit.test.step" inheritall="true" if="${test.framework == 'xunit'}" />
    <call target="set_normal_failure_mode" />
  </target>

  <target name="all">
    <nant buildfile="${dirs.current.file}${path.separator}mbunit2.test.step" target="run_all_tests" inheritall="true" if="${test.framework == 'mbunit2'}" />
    <nant buildfile="${dirs.current.file}${path.separator}gallio.test.step" target="run_all_tests" inheritall="true" if="${test.framework == 'gallio'}" />
    <nant buildfile="${dirs.current.file}${path.separator}nunit.test.step" target="run_all_tests" inheritall="true" if="${test.framework == 'nunit'}" />
    <nant buildfile="${dirs.current.file}${path.separator}xunit.test.step" target="run_all_tests" inheritall="true" if="${test.framework == 'xunit'}" />
    <call target="set_normal_failure_mode" />
  </target>

  <target name="open_results">
    <nant buildfile="${dirs.current.file}${path.separator}mbunit2.test.step" target="open_results" inheritall="true" if="${test.framework == 'mbunit2'}" />
    <nant buildfile="${dirs.current.file}${path.separator}gallio.test.step" target="open_results" inheritall="true" if="${test.framework == 'gallio'}" />
    <nant buildfile="${dirs.current.file}${path.separator}nunit.test.step" target="open_results" inheritall="true" if="${test.framework == 'nunit'}" />
    <nant buildfile="${dirs.current.file}${path.separator}xunit.test.step" target="open_results" inheritall="true" if="${test.framework == 'xunit'}" />
  </target>

  <target name="set_normal_failure_mode">
    <property name="nant.onfailure" value="fail" />
  </target>

</project>
