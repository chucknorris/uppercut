<?xml version="1.0" encoding="utf-8" ?>
<project name="PolicyEnforcer" default="go">
  <!-- Project UppercuT - http://projectuppercut.org -->
  <!-- DO NOT EDIT THIS FILE - Add custom tasks in BuildTasks.Custom folder with file by the same name - find out more at http://uppercut.pbwiki.com -->
  <property name="build.config.settings" value="__NONE__" overwrite="false" />
  <include buildfile="${build.config.settings}" if="${file::exists(build.config.settings)}" />
  <property name="path.separator" value="${string::trim(path::combine(' ', ' '))}" />
  <property name="file.current.no_extension" value="policyChecks" />
  <property name="dirs.current" value="${directory::get-current-directory()}" />
  <property name="dirs.current.file" value="${directory::get-parent-directory(project::get-buildfile-path())}" />  
  <property name="folder.build_scripts" value="build" overwrite="false" />
  <property name="folder.build_scripts_custom" value="build.custom" overwrite="false" />
  <property name="dirs.build_scripts_custom" value="${dirs.current}${path.separator}${folder.build_scripts_custom}" />
  <property name="folder.documentation" value="docs" overwrite="false" />
  <property name="dirs.docs" value="${path::get-full-path(dirs.current)}${path.separator}${folder.documentation}" />
  <property name="project.name" value="__SOLUTION_NAME_WITHOUT_SLN_EXTENSION__" overwrite="false" />
  <property name="file.installation_document" value="${dirs.docs}${path.separator}Installation${path.separator}Install.docx" overwrite="false" />
  <property name="fail.if_no_installation_document" value="false" overwrite="false" />
  <property name="is.replaced" value="false" />
  <property name="fail.build.on.error" value="true" />

  <target name="go" depends="run_tasks" />

  <target name="run_tasks">
    <echo level="Warning" message="" />
    <echo level="Warning" message="====================" />
    <echo level="Warning" message="${project::get-name()}" />
    <echo level="Warning" message="====================" />
    <call target="prepare" if="${target::exists('prepare')}" />
    <customExtension extends="${project::get-buildfile-path()}" type="pre" failonerror="${fail.build.on.error}" />
    <customExtension extends="${project::get-buildfile-path()}" type="replace" failonerror="${fail.build.on.error}" />
    <call target="run_normal_tasks" if="${not is.replaced}" />
    <customExtension extends="${project::get-buildfile-path()}" type="post" failonerror="${fail.build.on.error}" />
  </target>

  <target name="run_normal_tasks"
          depends="install_document_policy"
          description="Enforcing active rules/policies." />

  <target name="install_document_policy">
    <echo level="Warning" message="Checking for the existence of ${path::get-full-path(file.installation_document)}. Do we fail the build if it is missing? ${fail.if_no_installation_document}" />
    <fail message="You must provide an installation document as a matter of policy."
      if="${fail.if_no_installation_document == 'true' and not file::exists(file.installation_document)}" />
  </target>

</project>