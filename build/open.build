<?xml version="1.0" encoding="utf-8" ?>
<project name="Open" default="go">
  <!-- Project UppercuT - http://projectuppercut.org -->
  <!-- DO NOT EDIT THIS FILE - find out more at http://uppercut.pbwiki.com -->
  <property name="build.config.settings" value="__NONE__" overwrite="false" />
  <include buildfile="${build.config.settings}" if="${file::exists(build.config.settings)}" />
  <property name="path.separator" value="${string::trim(path::combine(' ', ' '))}" />
  <property name="file.current.no_extension" value="open" />
  <property name="dirs.current" value="${directory::get-parent-directory(project::get-buildfile-path())}" />
  <property name="path.to.toplevel" value=".." />
  <property name="folder.build_scripts" value="build" overwrite="false" />
  <property name="folder.build_scripts_custom" value="build.custom" overwrite="false" />
  <property name="dirs.build_scripts_custom" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.build_scripts_custom}" />
  <property name="dirs.solution" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${path_to_solution}" />
  <property name="solution.path" value="${path::get-full-path(dirs.solution)}${path.separator}${project.name}.sln" />
  <property name="solution.path.full" value="${path::get-full-path(solution.path)}" />
  <property name="app.visual_studio" value="${environment::get-folder-path('ProgramFiles')}\Common Files\Microsoft Shared\MSEnv\VSLauncher.exe" />
  <property name="app.monodevelop" value="monodevelop" />
  <property name="file.uppercut.assembly" value="uppercut.tasks.dll" />
  <property name="path.uppercut.assembly" value="${dirs.current}${path.separator}${file.uppercut.assembly}" />
  <property name="allow.powershell.unrestricted" value="false" overwrite="false" />
  <property name="is.replaced" value="false" />
  <property name="fail.build.on.error" value="false" />

  <target name="go" depends="load_uppercut_assemblies, allow_powershell_unrestricted, run_tasks" />

  <target name="run_tasks">
    <echo level="Warning" message="" />
    <echo level="Warning" message="====================" />
    <echo level="Warning" message="${project::get-name()}" />
    <echo level="Warning" message="====================" />
    <call target="prepare" if="${target::exists('prepare')}" />
    <customExtension extends="${project::get-buildfile-path()}" type="pre" failonerror="${fail.build.on.error}" />
    <customExtension extends="${project::get-buildfile-path()}" type="replace" failonerror="${fail.build.on.error}" />
    <call target="run_normal_tasks" if="${not is.replaced}" />
    <customExtension extends="${project::get-buildfile-path()}" type="post" failonerror="${fail.build.on.error}" />
  </target>

  <target name="run_normal_tasks"
          depends="open_visual_studio"
          description="Opening Visual Studio." />

  <target name="open_visual_studio">
  	<if test="${platform::is-unix()}">
  		<echo level="Warning" message="Opening MonoDevelop with solution file ${solution.path.full}"/>
  		<exec
	      spawn="true"
	      program="${app.monodevelop}"
	      commandline="${solution.path.full}"
	      >
	    </exec>
  	</if>
  	<if test="${platform::is-windows()}">
	    <echo level="Warning" message="Opening visual studio with solution file ${solution.path.full}."/>
	    <exec
	      spawn="true"
	      basedir="${dirs.solution}"
	      program="${app.visual_studio}"
	      commandline="${solution.path.full}"
	      >
	    </exec>
	 </if>
  </target>

  <target name="load_uppercut_assemblies">
    <loadtasks assembly="${path.uppercut.assembly}" if="${file::exists(path.uppercut.assembly)}" />
  </target>

  <target name="allow_powershell_unrestricted">
    <!-- powershell 1.0 -->
    <exec program="powershell.exe" if="${allow.powershell.unrestricted}" failonerror="false">
      <arg value="set-executionpolicy unrestricted" />
    </exec>
    <!-- powershell 2.0 -->
    <exec program="powershell.exe" if="${allow.powershell.unrestricted}" failonerror="false">
      <arg value="set-executionpolicy unrestricted -force -scope CurrentUser" />
    </exec>
  </target>

</project>